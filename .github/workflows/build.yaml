name: Build
permissions:
  statuses: write
  checks: write
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - '*.puml'
      - 'cspell.json'
      - '.github/workflows/release.yaml'
jobs:
  build_job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 20
      - uses: wagoid/commitlint-github-action@v5
        with:
          configFile: .commitlintrc.yml
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: Gr1N/setup-poetry@v8
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - run: |
          poetry install
      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: just test
      - name: test report junit
        uses: dorny/test-reporter@v1
        if: ${{ success() || failure() }}
        with:
          name: test report
          path: ./test-*.xml
          reporter: java-junit
      - name: failure logs
        if: ${{ failure() }}
        run:
          docker ps

